name: ai-dispatcher
on:
  issue_comment:
    types: [created]
permissions:
  contents: write
  pull-requests: write
jobs:
  dispatch:
    if: ${{ github.event.comment.user.login == github.repository_owner && startsWith(github.event.comment.body, '/ai ') }}
    runs-on: ubuntu-latest
    steps:
      - name: Parse command
        id: cmd
        run: |
          cmd="${{ github.event.comment.body }}"
          cmd="${cmd#'/ai '}"
          echo "cmd=$cmd" >> $GITHUB_OUTPUT
      - name: Update all behind
        if: steps.cmd.outputs.cmd == 'update all'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr list --state open --json number,mergeStateStatus --jq '.[] | [.number,.mergeStateStatus] | @tsv' | \
          while IFS=$'\t' read -r num state; do
            if [ "$state" = "BEHIND" ]; then
              gh api -X PUT "repos/${GITHUB_REPOSITORY}/pulls/$num/update-branch" || true
            fi
          done
      - name: Arm auto-merge all
        if: steps.cmd.outputs.cmd == 'merge all'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for n in $(gh pr list --state open --json number --jq '.[].number'); do
            gh pr merge "$n" --squash --delete-branch --auto || true
          done
      - name: Status
        if: steps.cmd.outputs.cmd == 'status'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr list --state open --json number,title,mergeStateStatus,autoMergeRequest --jq '.[] | [.number,(if .autoMergeRequest then "ARMED" else "NOT-ARMED" end),.mergeStateStatus,.title] | @tsv'
