name: ai-dispatcher
on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      strict:
        description: 'Fail when required secrets are missing'
        type: boolean
        default: false
  schedule:
    - cron: '15 18 * * SUN'
permissions:
  contents: write
  pull-requests: write
concurrency:
  group: ai-dispatcher-${{ (github.event.pull_request.number != null && format('pr-{0}', github.event.pull_request.number)) || github.ref }}
  cancel-in-progress: true

jobs:
  dispatch:
    if: >
      github.event_name == 'issue_comment' &&
      github.event.comment.user.login == github.repository_owner &&
      startsWith(github.event.comment.body, '/ai ')
    runs-on: ubuntu-latest
    steps:
      - name: Parse command
        id: cmd
        run: |
          cmd="${{ github.event.comment.body }}"
          cmd="${cmd#'/ai '}"
          echo "cmd=$cmd" >> $GITHUB_OUTPUT
      - name: Update all behind
        if: steps.cmd.outputs.cmd == 'update all'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr list --state open --json number,mergeStateStatus \
            --jq '.[] | [.number,.mergeStateStatus] | @tsv' |
          while IFS=$'\t' read -r num state; do
            [ "$state" = "BEHIND" ] && gh api -X PUT "repos/${GITHUB_REPOSITORY}/pulls/$num/update-branch" || true
          done
      - name: Arm auto-merge all
        if: steps.cmd.outputs.cmd == 'merge all'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for n in $(gh pr list --state open --json number --jq '.[].number'); do
            gh pr merge "$n" --squash --delete-branch --auto || true
          done
      - name: Status
        if: steps.cmd.outputs.cmd == 'status'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr list --state open --json number,title,mergeStateStatus,autoMergeRequest \
            --jq '.[] | [.number,(if .autoMergeRequest then "ARMED" else "NOT-ARMED" end),.mergeStateStatus,.title] | @tsv'

  env-hardening:
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    env:
      # secrets presence flags (true/false as strings)
      HAS_OPENAI: ${{ secrets.OPENAI_API_KEY != '' }}
      HAS_SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY != '' }}
      HAS_SUPABASE_URL: ${{ secrets.SUPABASE_URL != '' }}
      # strict only for workflow_dispatch (manual); schedule is always treated as strict via job if-condition below
      STRICT: ${{ github.event_name == 'workflow_dispatch' && inputs.strict == true }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Run env hardening dispatch
        run: |
          mkdir -p artifacts/agent_reports
          python -m scripts.agents.dispatcher --task env_hardening --payload "{}" | tee artifacts/agent_reports/env_hardening.json
      # In non-strict manual runs, only warn (do not fail) when required secrets are missing
      - name: Warn when secrets are missing (non-strict mode)
        if: ${{ env.STRICT != 'true' && github.event_name == 'workflow_dispatch' && (env.HAS_OPENAI != 'true' || env.HAS_SUPABASE_KEY != 'true' || env.HAS_SUPABASE_URL != 'true') }}
        run: |
          missing=()
          [ "${HAS_OPENAI}" = "true" ] || missing+=("OPENAI_API_KEY")
          [ "${HAS_SUPABASE_KEY}" = "true" ] || missing+=("SUPABASE_SERVICE_ROLE_KEY")
          [ "${HAS_SUPABASE_URL}" = "true" ] || missing+=("SUPABASE_URL")
          echo "::warning::Missing required secrets (non-strict run): ${missing[*]}"
      - name: Guard ok field without jq
        if: ${{ env.STRICT == 'true' || github.event_name == 'schedule' }}
        run: |
          python - << 'PY'
          import json,sys
          from pathlib import Path
          p=Path("artifacts/agent_reports/env_hardening.json")
          data=json.loads(p.read_text())
          if not isinstance(data.get("ok"), bool):
              print("ok must be boolean"); sys.exit(1)
          if not data["ok"]:
              print("agent reported not ok"); sys.exit(1)
          print("ok true")
          PY
      - name: Upload env hardening result
        uses: actions/upload-artifact@v4
        with:
          name: agent_reports
          path: artifacts/agent_reports/env_hardening.json
          retention-days: 7
